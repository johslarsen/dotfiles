#!/bin/bash -
image=${1:?USAGE: $0 BUILD_IMAGE [...]}
args=( "${@:2}" )

build=${BUILD:-build}
mnt="$PWD"
run() {
    ccache=( -e CCACHE_DIR=/tmp/ccache -v "${CCACHE_DIR:-$HOME/.cache/ccache}:/tmp/ccache" )
    [[ "$CCACHE_SIZE" ]] && ccache+=( -e CCACHE_SIZE="$CCACHE_SIZE" )
    docker run --rm --user=$UID:$(id -g $UID) -v "$PWD:$mnt" "${ccache[@]}" --env-file=<(env | grep -e CMAKE -e FLAGS -e CC -e CXX) "$image" "$@"
}

if [ -d "$build" ]; then
    mnt=$(dirname "$(awk 'match($0, /For build in directory: (.*)/, m){print m[1]}' "$build/CMakeCache.txt")")
else
    build_type=${BUILD_TYPE:-Debug}
    typed="${build}-${build_type}"
    ! [ -e "$build" ] || [ -L "$build" ] && ln -sfT "$(basename "$typed")" "$build"
    run cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DCMAKE_BUILD_TYPE="$build_type" -G"${GENERATOR:-Ninja}" -S"$mnt" -B"$mnt/$typed"
fi
run cmake --build "$mnt/$build" -- -j$(nproc) "${args[@]}"
